name: Build, Push and Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: dotted-lens-412717
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Install gcloud beta components and gke-gcloud-auth-plugin
        run: |
          gcloud components install beta gke-gcloud-auth-plugin --quiet

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev --quiet

      - name: Build Docker Image
        run: docker build -t europe-west4-docker.pkg.dev/dotted-lens-412717/prachtig/helloweb3:${{ github.sha }} .

      - name: Push Docker Image to Artifact Registry
        run: docker push europe-west4-docker.pkg.dev/dotted-lens-412717/prachtig/helloweb3:${{ github.sha }}

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials kubernetes-cluster --zone europe-west1-d --project dotted-lens-412717

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.5.2'

      - name: Create Kubernetes Secret for Polygonscan API Key
        run: |
          kubectl create secret generic polygonscan-api-key \
            --from-literal=polygonscan-api-key=${{ secrets.POLYGONSCAN_API_KEY }} \
            --namespace default

      - name: Create Kubernetes Secret for PostgreSQL Password
        run: |
          kubectl create secret generic postgres-secret \
            --from-literal=postgres-password=${{ secrets.POSTGRESSECRET }} \
            --namespace default

      - name: Create Kubernetes Secret for Grafana Admin Password
        run: |
          kubectl create secret generic grafana-secret \
            --from-literal=GFSECURITYADMINPASSWORD=${{ secrets.GFSECURITYADMINPASSWORD }} \
            --namespace default

      - name: Helm Upgrade and Install Release
        run: |
          helm upgrade --install helloweb3 ./helm/helloWeb3 --namespace default \
            --set image.repository=europe-west4-docker.pkg.dev/dotted-lens-412717/prachtig/helloweb3 \
            --set image.tag=${{ github.sha }}
